'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _HexPattern = require('./HexPattern');

var _HexPattern2 = _interopRequireDefault(_HexPattern);

var _HexPointers = require('./HexPointers');

var _HexPointers2 = _interopRequireDefault(_HexPointers);

var _HexUtils = require('./HexUtils');

var _HexUtils2 = _interopRequireDefault(_HexUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var object = _react2.default.PropTypes.object;

var HexShape = function (_React$Component) {
  _inherits(HexShape, _React$Component);

  function HexShape() {
    _classCallCheck(this, HexShape);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(HexShape).apply(this, arguments));
  }

  _createClass(HexShape, [{
    key: 'getPoints',
    value: function getPoints(hex) {
      var points = this.props.layout.getPolygonPoints(hex);

      return points.map(function (point) {
        return point.x + ',' + point.y;
      }).join(' ');
    }
  }, {
    key: 'translate',
    value: function translate() {
      var hex = this.props.hex;
      var pixel = _HexUtils2.default.hexToPixel(hex, this.props.layout);
      return 'translate(' + pixel.x + ', ' + pixel.y + ')';
    }
  }, {
    key: 'getStyles',
    value: function getStyles(hex) {
      return hex.props == {} || typeof hex.props.image === "undefined" ? {} : { fill: 'url(#' + _HexUtils2.default.getID(hex) + ')' };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;
      var hex = _this2.props.hex;
      var text = _this2.props.text ? _this2.props.text : _HexUtils2.default.getID(hex);
      var actions = this.props.actions;
      var styles = this.getStyles(hex);
      var points = this.getPoints(hex);
      var id = _this2.props.index;
      return _react2.default.createElement(
        'g',
        { className: 'shape-group', transform: this.translate(), draggable: 'true', id: 'h' + id,
          onMouseEnter: function onMouseEnter(e) {
            return actions.onMouseEnter(id, e);
          },
          onMouseLeave: function onMouseLeave(e) {
            return actions.onMouseLeave( id , e);
          },
          onDragStart: function onDragStart(e) {
            return actions.onDragStart(_this2.props.hex, e);
          },
          onDragEnd: function onDragEnd(e) {
            return actions.onDragEnd(_this2.props.hex, e);
          },
          onDragOver: function onDragOver(e) {
            return actions.onDragOver(_this2.props.hex, e);
          },
          onDrop: function onDrop(e) {
            return actions.onDrop(_this2.props.hex, e);
          },
          onClick: function onClick(e){
            return actions.onClick(_this2.props.hex, e)
          }
        },
        _react2.default.createElement(_HexPattern2.default, { hex: hex }),
        _react2.default.createElement('polygon', { points: points, style: styles }),
        _react2.default.createElement(_HexPointers2.default, { hex: hex, points: points }),
        _react2.default.createElement('circle', {
          cx: 0, cy: 0, r: 3,
          onClick: function(e) { console.log('token clicked')}
        }),
        _react2.default.createElement('text',  { x: '0', y: '.3em', textAnchor: 'middle' }, text)
      );
    }
  }]);

  return HexShape;
}(_react2.default.Component);

HexShape.propTypes = {
  hex: object.isRequired,
  layout: object.isRequired,
  actions: object.isRequired
};

exports.default = HexShape;
